{"name":"MyOwnMocker","tagline":"Online Mock Server","body":"## API\r\n\r\n#### Register (for a mock token)\r\n\r\nThis is the first call you need to make to generate a mock API token to create mock API paths later\r\n\r\n    GET /register/\r\n    \r\n###### Example Response\r\n\r\n    < HTTP/1.1 200 OK\r\n    < Content-Type: application/json\r\n    \r\n    {\r\n      \"token\": \"MeB3aNo4yDXrtNH6\"\r\n    }\r\n\r\n### Setup (a mock path)\r\n\r\nThis is the call to setup (create) mock API paths\r\n\r\n    POST /setup/:token/\r\n    Content-Type: application/json\r\n    \r\n###### Parameters\r\n\r\n| Name              | Type      | Description |\r\n| :--------------: |:---------:| :-----:|\r\n| path              | string    | **Required**. |\r\n| status_code       | int       | **Required**. |\r\n| content_type      | string    | **Required**. |\r\n| content_encoding  | string    | Optional. |\r\n| body              | string    | Optional. |\r\n\r\n###### Example Input\r\n\r\n    {\r\n        \"path\": \"login/\",\r\n        \"status_code\": 400,\r\n        \"content_type\": \"application/json\",\r\n        \"content_encoding\": \"UTF-8\",\r\n        \"body\": \"{\\\"code\\\": \\\"invalid_login\\\"}\"\r\n    }\r\n\r\n###### Example Response\r\n\r\n    < HTTP/1.1 200 OK\r\n    < Content-Type: application/json\r\n\r\n    {\r\n        \"message\": \"ok\"\r\n    }\r\n    \r\n### Mock (your mock API base URL)\r\n\r\nThis is your mock API \"new\" base URL. All the mock API paths you setup are available under `/mock/:token/` for both `GET`and `POST`methods.  \r\nExample (using token and path created in `register`and `setup`section examples):\r\n\r\n    $ curl -v https://mom.skmobi.com/mock/MeB3aNo4yDXrtNH6/login/\r\n    < HTTP/1.1 400 BAD REQUEST\r\n    < Content-Type: application/json\r\n    < Content-Length: 25\r\n    < \r\n    {\"code\": \"invalid_login\"}\r\n\r\n## Setting up your own copy of MOM\r\n\r\nUsing heroku cli, settings your own copy is as easy as:\r\n\r\n    $ git clone https://github.com/fopina/myownmocker\r\n    Cloning into 'myownmocker'...\r\n    remote: Counting objects: 35, done.\r\n    remote: Compressing objects: 100% (28/28), done.\r\n    remote: Total 35 (delta 5), reused 11 (delta 2), pack-reused 0\r\n    Unpacking objects: 100% (35/35), done.\r\n    Checking connectivity... done.\r\n\r\n    $ cd myownmocker/\r\n    $ heroku create\r\n    Creating evening-scrubland-9609... done, stack is cedar-14\r\n    https://evening-scrubland-9609.herokuapp.com/ | https://git.heroku.com/evening-scrubland-9609.git\r\n    Git remote heroku added\r\n    \r\n    $ git push heroku\r\n    Counting objects: 14, done.\r\n    Delta compression using up to 4 threads.\r\n    Compressing objects: 100% (11/11), done.\r\n    Writing objects: 100% (14/14), 4.81 KiB | 0 bytes/s, done.\r\n    Total 14 (delta 2), reused 0 (delta 0)\r\n    remote: Compressing source files... done.\r\n    remote: Building source:\r\n    remote: \r\n    (...)\r\n    remote: -----> Launching... done, v4\r\n    remote:        https://evening-scrubland-9609.herokuapp.com/ deployed to Heroku\r\n    remote: \r\n    remote: Verifying deploy... done.\r\n    To https://git.heroku.com/evening-scrubland-9609.git\r\n     * [new branch]      master -> master\r\n\r\n    $ heroku run ./manage.py initdb\r\n    Running ./manage.py initdb on evening-scrubland-9609... up, run.7551\r\n    Using database postgres://frsnvzfkdflxFc:ZfT4aMeprPYiQC@ec2-107-21-219-235.compute-1.amazonaws.com:5432/dk3m44gfjo30g\r\n    Created tables\r\n\r\nAnd it's live!\r\n","google":"UA-53638170-7","note":"Don't delete this file! It's used internally to help with page regeneration."}
